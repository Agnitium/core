<?php//******************************//EQdkp Tradeskills//Changed: Oct 20, 2006// ******************************/include_once($eqdkp_root_path . 'common.php');global $table_prefix;//Define the tablesif (!defined('TS_CONFIG_TABLE')) { define('TS_CONFIG_TABLE', $table_prefix . 'tradeskill_config'); }if (!defined('RP_TRADESKILL_TABLE')) { define('RP_TRADESKILL_TABLE', $table_prefix . 'tradeskills'); }if (!defined('RP_RECIPES_TABLE')) { define('RP_RECIPES_TABLE', $table_prefix . 'tradeskill_recipes'); }if (!defined('RP_USERS_TABLE')) { define('RP_USERS_TABLE', $table_prefix . 'tradeskill_users'); }if (!defined('RP_TUSERS_TABLE')) { define('RP_TUSERS_TABLE', $table_prefix . 'user_tradeskills'); }// get the config$sql = 'SELECT * FROM ' . TS_CONFIG_TABLE;if (!($settings_result = $db->query($sql))) { message_die('Could not obtain configuration data: Get Config', '', __FILE__, __LINE__, $sql); }while($roww = $db->fetch_record($settings_result)) {  $conf[$roww['config_name']] = $roww['config_value'];}// the "Save my Data to the Database" :D function UpdateTSConfig($fieldname,$insertvalue){	global $eqdkp_root_path, $user, $SID, $table_prefix, $db;        $sql = "UPDATE `" . $table_prefix . "tradeskill_config` SET config_value='".strip_tags(htmlspecialchars($insertvalue))."' WHERE config_name='".$fieldname."';";        if ($db->query($sql)){          return true;        } else {          return false;        }} function UpdateTSinuse($tradeid){	global $eqdkp_root_path, $user, $SID, $table_prefix, $db;	$sql = 'SELECT inuse FROM ' . RP_TRADESKILL_TABLE . ' WHERE trade_id = ' . $tradeid .'';		if (!($result = $db->query($sql))) { message_die('Could not obtain configuration data: TSinuse', '', __FILE__, __LINE__, $sql); }	$usearray = $db->fetch_record($result);		$using=$usearray['inuse'];	if($using == 1)	{        	$sql = "UPDATE " . RP_TRADESKILL_TABLE . " SET inuse= '0' WHERE trade_id=".$tradeid.";";        	if ($db->query($sql))		{          		return true;		} else {          		return false;		}	}	else	{        	$sql = "UPDATE " . RP_TRADESKILL_TABLE ." SET inuse= '1' WHERE trade_id=".$tradeid.";";        	if ($db->query($sql))		{          		return true;		} else {          		return false;		}	}}//----Functions from index.php-------- function hide_tradeskill($trade_id, $user_id, $hide){	global $db;	$sql = 'SELECT tusers.id		FROM ' . RP_TUSERS_TABLE . ' tusers, ' . MEMBER_USER_TABLE . ' as muser		WHERE muser.user_id = ' . $user_id . '		AND muser.member_id = tusers.member_id		AND tusers.trade_id = ' . $trade_id;	$result = $db->query($sql);	$row = $db->fetch_record($result);		if ($row){		// UPDATE USER_TRADESKILL (HIDE/SHOW)		$query = $db->build_query('UPDATE', array(        		'hide'					=> $hide,			));       		$db->query('UPDATE ' . RP_TUSERS_TABLE . ' SET ' . $query . " WHERE id='" . $row['id'] . "'");#DEBUG print "updated tradeskill:" . $row['id'] . " - (" . $hide . ")";		}	else{	$sql = 'SELECT member_id		FROM ' . MEMBER_USER_TABLE . '		WHERE user_id = ' . $user_id;	$result = $db->query($sql);	$row = $db->fetch_record($result);		// ADD USER_TRADESKILL ENTRY		$query = $db->build_query('INSERT', array(        	'trade_id'					=> $trade_id,        	'member_id'					=> $row['member_id'],		'ps'					=> 0,		'hide' 					=> $hide,		));       		$db->query('INSERT INTO ' . RP_TUSERS_TABLE . $query);	#DEBUG print "DEBUG: added tradeskill: " . $trade_id . " - (" . $hide . ")";}	if ($hide == 1) {		return array("info" => "ts_list_hide", "info_id" => $trade_id);}	else{		return array("info" => "ts_list_show", "info_id" => $trade_id);}}function get_owner($recipe_id, $user_id, $current_member_id){        global $db;	// .....	$sql = 'SELECT users.member_id	FROM ' . RP_USERS_TABLE . ' as users	WHERE users.trade_id = ' . $recipe_id . '	AND users.member_id ='. $current_member_id;		$result = $db->query($sql);	$row = $db->fetch_record($result);	if ($row){		return $row['member_id'];}	else{		return N;}		}/*function get_owner($recipe_id, $user_id){        global $db;	// .....	$sql = 'SELECT users.member_id	FROM ' . RP_USERS_TABLE . ' as users, ' . MEMBER_USER_TABLE . ' as muser	WHERE muser.user_id = ' . $user_id . '	AND users.trade_id = ' . $recipe_id . '	AND users.member_id = muser.member_id';	$result = $db->query($sql);	$row = $db->fetch_record($result);	if ($row){		return $row['member_id'];}	else{		return N;}} *///Diese Funktion vergleicht ob man den Beruf gewählt hat?//Gibt erste MemberID zur zugehörigen user_id zurück, die den Trade gewählt hat (und auch Recipe)function get_tradeskill_match($recipe_id, $user_id, $trade_id, $current_member_id){	global $db;    global $twoProfs;    global $show_cooking;	// ....   if(($trade_id == 7) && ($show_cooking == 1)){      return $current_member_id;}  elseif($twoProfs==1)//check if a member associated with user has profession with trade_id{	if (!$trade_id) {		$sql = 'SELECT tusers.member_id		FROM ' . RP_TUSERS_TABLE . ' tusers, ' . RP_RECIPES_TABLE . ' as recipes		WHERE recipes.id = ' . $recipe_id . '		AND recipes.trade_id = tusers.trade_id        AND tusers.member_id =' . $current_member_id . '		AND tusers.ps != 0';}	else{		$sql = 'SELECT tusers.member_id		FROM ' . RP_TUSERS_TABLE . ' tusers		WHERE tusers.trade_id = ' . $trade_id . '		AND tusers.member_id = ' . $current_member_id . '		AND tusers.ps != 0';}#DEBUG print "DEBUG: matchmaker:" . $user_id . " - " . $recipe_id . " - (" . $trade_id . ")";	$result = $db->query($sql);	$row = $db->fetch_record($result);	if ($row){			return $row['member_id'];}	else {		return N;}}  else//just return $current_member_id{		return $current_member_id;}}//OLD funktion/*function get_tradeskill_match($recipe_id, $user_id, $trade_id){	global $db;	// ....     if($twoprofs==1)//check if a member associated with user has profession with trade_id{	if (!$trade_id){		$sql = 'SELECT tusers.member_id		FROM ' . RP_TUSERS_TABLE . ' tusers, ' . RP_RECIPES_TABLE . ' as recipes, ' . MEMBER_USER_TABLE . ' as muser		WHERE recipes.id = ' . $recipe_id . '		AND recipes.trade_id = tusers.trade_id		AND muser.user_id = ' . $user_id . '		AND muser.member_id = tusers.member_id		AND tusers.ps != 0';}	else{		$sql = 'SELECT tusers.member_id		FROM ' . RP_TUSERS_TABLE . ' tusers, ' . MEMBER_USER_TABLE . ' as muser		WHERE tusers.trade_id = ' . $trade_id . '		AND muser.user_id = ' . $user_id . '		AND muser.member_id = tusers.member_id		AND tusers.ps != 0';}#DEBUG print "DEBUG: matchmaker:" . $user_id . " - " . $recipe_id . " - (" . $trade_id . ")";	$result = $db->query($sql);	$row = $db->fetch_record($result);	if ($row){		return $row['member_id'];}	else{		return N;}}    else//just return first member_id associated to teh user{		$firstmember = $db->query_first('SELECT member_id FROM ' . MEMBER_USER_TABLE . ' WHERE user_id = ' . $user_id.'');		return $firstmember;}} */function hide($user_id, $trade_id){	global $db;	// ....		$sql = 'SELECT tusers.id, tusers.hide		FROM ' . RP_TUSERS_TABLE . ' tusers, ' . MEMBER_USER_TABLE . ' as muser		WHERE muser.user_id = ' . $user_id . '		AND muser.member_id = tusers.member_id		AND tusers.trade_id = ' . $trade_id;#DEBUG print "DEBUG: hide?:" . $user_id . " - " . $recipe_id . " - (" . $trade_id . ")";	$result = $db->query($sql);	$row = $db->fetch_record($result);	if (($row['hide'] == 0) && ($row['id'] != 0) || ($_GET['show'] == $trade_id)){			return FALSE;}	elseif (($row['hide'] == 1) || ($_GET['hide'] == $trade_id)){		return TRUE;}	elseif ($row['id'] == 0){			/* DEFAULT */ return TRUE;}	else{		return FALSE;}}//add Members to owner-List (people who are capable of that skill)function update_tradeskill($recipe_id, $user_id, $current_member_id){	global $db, $user;				$trade_id = $db->query_first('SELECT trade_id FROM ' . RP_RECIPES_TABLE . ' WHERE id = ' . $recipe_id . '');    $user_trade = get_tradeskill_match($recipe_id, $user_id, $trade_id, $current_member_id); //this is a member-id or N	//TEST:		if($user_trade == 'N'){ return array("info" => "(No Tradeskill of Member)", "info_id" => $trade_id);}	// CHECK PERMISSION!	if (!$user->check_auth('u_ts_confirm', false)) { return array("info" => "(Access denied)", "info_id" => $trade_id); }	$owner = get_owner($recipe_id, $user_id, $current_member_id);		if ($owner == 'N') {        	    $query = $db->build_query('INSERT', array(        		'member_id'					=> $user_trade,        		'trade_id'					=> $recipe_id,				));       		     $db->query('INSERT INTO ' . RP_USERS_TABLE . $query);#DEBUG print "DEBUG: +updated tradeskill:" . $user_trade . " ". $recipe_id . " " . $user_id . " " . $owner;			return array("info" => "ts_signed", "info_id" => $trade_id);}		else{		$db->query('DELETE FROM ' . RP_USERS_TABLE . ' WHERE member_id=' . $owner . ' AND trade_id=' . $recipe_id . '');#DEBUG print "-updated tradeskill:" . $recipe_id . "-" . $user_id . "-(" . $owner . ")";		return array("info" => "ts_resigned", "info_id" => $trade_id);}}function add_tradeskill($new_recipe, $new_reagent, $trade_id, $user_id,$current_member_id){	global $db, $user;	$item_stats = new ItemStats();	$user_trade = get_tradeskill_match(0, $user_id, $trade_id, $current_member_id); //this is a member_id or "N"		// CHECK PERMISSION!	if (!$user->check_auth('u_ts_manage', false) && !$user->check_auth('a_ts_admin', false)) { return array("info" => "ts_acc_denied", "info_id" => $trade_id); }	if (!IN_ADMIN)	{	if ($user_trade == "N") { return array("info" => "ts_nochar", "info_id" => $trade_id); }	}	$sql = 'SELECT id		FROM ' . RP_RECIPES_TABLE . '		WHERE "' . $new_recipe . '" = recipe_name';	$result = $db->query($sql);	$row = $db->fetch_record($result);		//-----------------Edit Achaz--------------------------------	if(empty($new_reagent)){        $wow_name="";		$new_reagent = get_Reagents($trade_id, $new_recipe,$wow_name);#DEBUG 		print "Debug new recipe" . $new_recipe . "\n";#DEBUG 		print "Debug wow_name" . $wow_name . "\n";        if($wow_name !== ""){#DEBUG print "Debug: This shouldn't be seen\n";                    $new_recipe=$wow_name;}#DEBUG print "Debug new recipe" . $new_recipe;}	//-----------------Edit Achaz End-----------------------------    		if ($row){		// UPDATE RECIPE REAGENTS		$query = $db->build_query('UPDATE', array(        		'reagents'					=> $new_reagent,			));       		$db->query('UPDATE ' . RP_RECIPES_TABLE . ' SET ' . $query . " WHERE id='" . $row['id'] . "'");#itemstats_get_html($new_recipe);#DEBUG print "updated tradeskill:" . $new_recipe . " - (" . $new_reagent . ") - " . $user_id . " - " . $trade_id . "";		return array("info" => "ts_exists", "info_id" => $trade_id);		}	else{#DEBUG print "DEBUG: Recipe: ". $new_recipe . " does not exist";		$color = $item_stats->getItemColor($new_recipe, true);		$quality = array("greyname" => 1, "whitename" => 2, "greenname" => 3, "bluename" => 4, "purplename" => 5, "orangename" => 6, "redname" => 7);#DEBUG		print "DEBUG: Color: ". $color ." ";		if(!$new_reagent){$new_reagent="  ";} //wenn new_reagent ganz leer macht SQL nicht mit#DEBUG		print "DEBUG: Reagent: ". $new_reagent ."\n ";				// ADD RECIPE		$query = $db->build_query('INSERT', array(        	'recipe_name'					=> $new_recipe,        	'reagents'					=> $new_reagent,		'trade_id'					=> $trade_id,		'addedby' 					=> $user_id,		'quality'					=> $quality[$color]		));       		$worked=$db->query('INSERT INTO ' . RP_RECIPES_TABLE . $query);		if(!$worked){			return array("info" => "ts_addnewfailed", "info_id" => $trade_id);		}#itemstats_get_html($new_recipe);#DEBUG print "DEBUG: added tradeskill: (" . $new_recipe . ") - (" . $new_reagent . ") - " . $user_id . " - (" . $trade_id . ") - (" . $color . ")";		return array("info" => "ts_addednew", "info_id" => $trade_id);}}function delete_tradeskill($delete, $user_id, $trade_id) {	global $db, $user;	// CHECK PERMISSION!	if (!$user->check_auth('u_ts_manage', false) && !$user->check_auth('a_ts_admin', false)) { return array("info" => "(Access denied)", "info_id" => $trade_id); }	$sql = 'SELECT addedby		FROM ' . RP_RECIPES_TABLE . '		WHERE "' . $delete . '" = id';	$result = $db->query($sql);	$row = $db->fetch_record($result);		if ($row['addedby'] == $user_id || $user->check_auth('a_ts_admin', false)) { 		$db->query('DELETE FROM ' . RP_RECIPES_TABLE . " WHERE id='" . $delete . "'");		return array("info" => "ts_deleted", "info_id" => $trade_id);}	else{		return array("info" => "ts_nogo", "info_id" => $trade_id);}}//edit achazfunction edit_tradeskill($recipe_id, $user_id, $trade_id, $edited_recipe_name, $edited_recipe_reagents){	global $db, $user;	// CHECK PERMISSION!	if (!$user->check_auth('u_ts_manage', false) && !$user->check_auth('a_ts_admin', false)) { return array("info" => "(Access denied)", "info_id" => $trade_id); }		$item_stats = new ItemStats();	$sql = 'SELECT addedby		FROM ' . RP_RECIPES_TABLE . '		WHERE id = ' . $recipe_id ;	$result = $db->query($sql);	$row = $db->fetch_record($result);	if ($row['addedby'] == $user_id || $user->check_auth('a_ts_admin', false)){        // UPDATE RECIPE NAME and REAGENTS		$color = $item_stats->getItemColor($edited_recipe_name, true);		$quality = array("greyname" => 1, "whitename" => 2, "greenname" => 3, "bluename" => 4, "purplename" => 5, "orangename" => 6, "redname" => 7);				$query = $db->build_query('UPDATE', array(                	'recipe_name' => $edited_recipe_name,        		'reagents'    => $edited_recipe_reagents,			'quality'     => $quality[$color],			));       		$db->query('UPDATE ' . RP_RECIPES_TABLE . ' SET ' . $query . " WHERE id='" . $recipe_id . "'");		return array("info" => "ts_edited", "info_id" => $trade_id);}	else{		return array("info" => "ts_noedit", "info_id" => $trade_id);}}function strip_name($name){	// STRIP FRONT	$l = strlen($name)-1;	$fs = 0; $bs = $l+1;	for ($i=0; ($name{$i}==" "); $i++) { $fs = $i+1; }	for ($i=$l; ($name{$i}==" "); $i--) { $bs = $i; }				return substr($name,$fs,$bs-$fs);}     ?>